
std::vector<T> coeffs(const std::vector<T>& x, const std::vector<T>& y, int &st) {

    st = check_conditions(x);
    if(st != 0){
        return {};
    }


    size_t n = x.size();
    std::vector<T> result(n, T(0));

    for (size_t i = 0; i < n; ++i) {
        std::vector<T> li_coeffs = { T(1) };

        T denom = T(1);

        for (size_t j = 0; j < n; ++j) {
            if (i == j) continue;


            std::vector<T> next(li_coeffs.size() + 1, T(0));

            for (size_t k = 0; k < li_coeffs.size(); ++k) {
                next[k]     -= li_coeffs[k] * x[j];
                next[k + 1] += li_coeffs[k];
            }

            li_coeffs = next;
            denom *= (x[i] - x[j]);

        }

        T scale = y[i] / denom;
        for (size_t k = 0; k < li_coeffs.size(); ++k)
            result[k] += li_coeffs[k] * scale;
    }

    return result;
}